# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Use oven-sh/setup-bun@v1 to install Bun
      # Bun includes its own runtime, aiming for Node.js compatibility.
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # You can specify a version like '1.x' or '1.1.x'

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            # Include Bun's cache path if needed, though setup-bun might handle it
            # ~/.bun/install/cache # Example Bun cache path
          # Generate a new cache whenever bun.lockb or source files change.
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but lockfile didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}-

      # Install dependencies using Bun
      - name: Install dependencies
        run: bun install

      # Build with Next.js using Bun's runtime
      - name: Build with Next.js
        run: bun run build
        env:
          PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}

      # Upload the build artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out # Assuming your Next.js export output is in the 'out' directory

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Uses the artifact uploaded in the build job

